from news.models import News
from news.serializers import NewsSerializer
from general.permissions import IsAdminUser

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status

from asgiref.sync import async_to_sync
from channels.layers import get_channel_layer


class NewsAPIView(APIView):
    def get(self, request):
        news = News.objects.all().order_by("-created_at")
        serializer = NewsSerializer(news, many=True)
        return Response(serializer.data, status=status.HTTP_200_OK)


class NewsGenerateAPIView(APIView):
    permission_classes = [IsAdminUser]

    def post(self, request):
        news = News.objects.create(
            title=f"News Generated by {request.user.role}",
            content=f"Content 001",
            image=f"https://picsum.photos/200/300?random=999"
        )
        serializer = NewsSerializer(news)

        channel_layer = get_channel_layer()

        async_to_sync(channel_layer.group_send)(
            "news",
            {
                "type": "news_message",
                "message": serializer.data
            }
        )
        return Response(serializer.data, status=status.HTTP_200_OK)